{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,WAGzBF,KAAEG,GAAQJ,EAEhB,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAIbH,EAAKU,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,GAAkBb,EAAKc,SAASC,OAAOC,MAC7C,IAAIC,GAASjB,EAAKc,SAASX,MAAMa,MAC7BE,GAAQlB,EAAKc,SAASI,KAAKF,MAC/B,IAAK,IAAIG,EAAI,EAAGA,GAAKN,EAAgBM,GAAK,EACxClB,EAAckB,EAAGF,GACdG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA2B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBT,EAAA2B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,IAE9Dc,GAASC,EAEbP,EAAEc,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nconst { form} = refs;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const promisesAmount = +form.elements.amount.value;\n  let delay = +form.elements.delay.value;\n  let step = +form.elements.step.value;\n  for (let i = 1; i <= promisesAmount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      delay += step;\n  }\n  e.target.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","promisesAmount","elements","amount","value","delay1","step","i","then","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.c6bc6eaa.js.map"}